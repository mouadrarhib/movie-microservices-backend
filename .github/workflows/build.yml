name: Build and Test Movie Microservices

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [discovery-server, api-gateway, movie-service, rating-service, review-service, stats-service]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Test ${{ matrix.service }}
      run: |
        cd ${{ matrix.service }}
        mvn clean test
        
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build all services
      run: mvn clean compile -DskipTests
      
    - name: Package all services
      run: mvn clean package -DskipTests
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: jar-artifacts
        path: |
          */target/*.jar
          !*/target/*-sources.jar
          !*/target/*-javadoc.jar
        retention-days: 30

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    strategy:
      matrix:
        service: [discovery-server, api-gateway, movie-service, rating-service, review-service, stats-service]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build ${{ matrix.service }}
      run: |
        cd ${{ matrix.service }}
        mvn clean package -DskipTests
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image for ${{ matrix.service }}
      run: |
        cd ${{ matrix.service }}
        docker build -t movie-microservices/${{ matrix.service }}:latest .
        
    - name: Save Docker image
      run: |
        docker save movie-microservices/${{ matrix.service }}:latest > ${{ matrix.service }}-image.tar
        
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-${{ matrix.service }}
        path: ${{ matrix.service }}-image.tar
        retention-days: 7

